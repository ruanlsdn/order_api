// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurante {
  id           String        @id @default(uuid())
  nome         String        @unique
  funcionarios Funcionario[]
  mesas        Mesa[]
  produtos     Produto[]
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
}

model Funcionario {
  id             String       @id @default(uuid())
  nome           String
  proprietario   Boolean
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt
  restaurante    Restaurante? @relation(fields: [restaurante_id], references: [id])
  restaurante_id String?
}

model Produto {
  id             String       @id @default(uuid())
  categoria      String
  descricao      String
  preco          Float
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt
  comandas       Comanda[]
  pedidos        Pedido[]
  restaurante    Restaurante? @relation(fields: [restaurante_id], references: [id])
  restaurante_id String?
  Categoria      Categoria?   @relation(fields: [categoriaId], references: [id])
  categoriaId    Int?
}

model Categoria {
  id         Int       @id @default(autoincrement())
  descricao  String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  produtos   Produto[]
}

model Mesa {
  id             String       @id @default(uuid())
  numero         Int
  comandas       Comanda[]
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt
  restaurante    Restaurante? @relation(fields: [restaurante_id], references: [id])
  restaurante_id String?
}

model Comanda {
  id         String    @id @default(uuid())
  produtos   Produto[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  mesa       Mesa?     @relation(fields: [mesa_id], references: [id])
  mesa_id    String?
  pedidos    Pedido[]
}

model Pedido {
  id         String   @id @default(uuid())
  quantidade Int
  produto    Produto  @relation(fields: [produto_id], references: [id])
  produto_id String // relation scalar field (used in the `@relation` attribute above)
  comanda    Comanda  @relation(fields: [comanda_id], references: [id])
  comanda_id String // relation scalar field (used in the `@relation` attribute above)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
